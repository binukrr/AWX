---
- name: Checking the file  /etc/oraInst.loc
  stat:
    path: /etc/oraInst.loc
  register: file

- name: Check whether it is Application server or Database."
  shell: "grep ^inventory_loc /etc/oraInst.loc | awk -F'/' '{print $3}'"
  register: APP_DB
  when: file.stat.exists == True

- name: Checking for database instances
  shell: "ps -aef | grep -i ora_pmon | grep -v grep | wc -l"
  register: instance
  when: file.stat.exists == True and APP_DB.stdout == "ora"

- name: Is the Database Running?
  shell: "ps -aef | grep -i ora_pmon | grep -v grep | awk -F'_' '{print $NF}' | tr '\n' ','"
  register: DB_INST
  when: file.stat.exists == True and APP_DB.stdout == "ora" and instance.stdout != "0"

- file: 
    path: /x01/pre_post_checks/{{ansible_date_time.date}}
    state: absent
  when: file.stat.exists == True and APP_DB.stdout == "ora" and instance.stdout != "0"
 
- name: Database is running. Exiting the play...
  fail:
    msg: "DB Instance \"{{ DB_INST.stdout }}\" is still running. Exitting........"
  when: file.stat.exists == True and APP_DB.stdout == "ora" and instance.stdout != "0"

- name: "Database Instance is not running. Proceeding further...."
  debug:
    msg: "No Database Running.Proceeding further........"
  when: file.stat.exists == True and APP_DB.stdout == "ora" and instance.stdout == "0"

- name: "Check whether the DB server is a single node or 2 node cluster"
  shell: "grep MGMTDB /etc/oratab | awk -F':' '{print $2}' | awk -F'/' '{print $NF}'"
  register: CLUSTER_PATH
  when: file.stat.exists == True and APP_DB.stdout == "ora"

- name: Checking the CRS path
  shell: "grep MGMTDB /etc/oratab | awk -F':' '{print $2}'"
  register: CRS_PATH
  when:
    - APP_DB.stdout == "ora"
    - CLUSTER_PATH.stdout == "crs"

- name: Check CRS service status...
  shell: "cd \"{{ CRS_PATH.stdout }}\"/bin && ./crsctl check crs"
  register: CRS_STATUS
  when:
    - APP_DB.stdout == "ora"
    - CLUSTER_PATH.stdout == "crs"

- name: CRS service is running on {{ ansible_hostname }} 
  debug:
    msg: "{{ CRS_STATUS.stdout.split('\n') }}"
  when:
    - APP_DB.stdout == "ora"
    - CLUSTER_PATH.stdout == "crs"

