---
- name: Checking the count of Ext4 file systems.
  shell: df -hTP | grep ext4 | wc -l
  register: ext4

- name: Checking the count of nfs file systems. 
  shell: df -hTP | grep nfs | wc -l
  register: nfs

- name: Checking the the count of ocfs2 file systems.
  shell: df -hTP | grep ocfs2 | wc -l
  register: ocfs2

- name: Checking the count of Ext4 file systems before patching. 
  shell: cat /x01/pre_post_checks/{{pre1.stdout}}/df-h_pre.txt | grep ext4 | wc -l
  register: ext4_b4

- name: Checking the count of nfs file systems before patching.
  shell: cat /x01/pre_post_checks/{{pre1.stdout}}/df-h_pre.txt | grep nfs | wc -l
  register: nfs_b4

- name: Checking the count of nfs file systems before patching.
  shell: cat /x01/pre_post_checks/{{pre1.stdout}}/df-h_pre.txt | grep ocfs2 | wc -l
  register: ocfs2_b4

- name: Total number of packages
  shell: rpm -qa | wc -l
  register: pkg_count

- name: Checking the kernel version before patching. 
  shell: cat /x01/pre_post_checks/{{pre1.stdout}}/OS_Kernel_ver_pre
  register: kern_ver


- name: Test for adaper_info
  debug:
    name: "Test {{adainf_stat.stdout}}"
 # when: ansible_system_vendor == 'HP' or ansible_system_vendor == 'HPE' and (adainf_stat is defined and adainf_stat.stdout == "adainf_not_match")
  when: adainf_stat is not defined

- name: Collecting information for send e-mail
  mail:
    subject: Post-check {{ ansible_hostname }}
    body: "Post-check on {{ ansible_hostname }} has been completed. Details are follows.\n\n\
           Hostname: {{ansible_hostname}}\n\n
           Server Type: {{ ansible_system_vendor }}\n\n
           Kernel_version: {{ansible_kernel}}\n
           OS_Version: {{ansible_distribution}}  {{ansible_distribution_version}}\n\n
           Total_Packages: {{pkg_count.stdout}}\n\n
           Filesystem count of EXT4: {{ext4.stdout}}\n
           Filesystem count of EXT4_Before_Patching: {{ ext4_b4.stdout }}\n\n
           Filesystem count of NFS: {{nfs.stdout}}\n
           Filesystem count of NFS_Before_Patching: {{ nfs_b4.stdout }}\n\n
           Filesystem count of OCFS2: {{ocfs2.stdout}}\n
           Filesystem count of OCFS2_Before_Patching: {{ocfs2_b4.stdout}}"
    to: Server Ops_Linux <ServerOps_Linux@herbalife.com>                                                                                         
- fail:
    msg: " ONE OF THE POST CHECK FAILED ON  {{ ansible_hostname }}. PLEASE CHECK THE PLAYBOOK LOGS AND FIX IT "
  when: (ansible_distribution_major_version == '6' and serv_stat_oel6.stdout == "serv_not_match") or 
        (ansible_distribution_major_version == '7' and serv_stat_oel7.stdout == "serv_not_match") or
         df_stat.stdout ==  "df_not_match" or diff_sysctl.stdout == "sysctl_not_match" or
        (lsam_stat.rc != 0 and file_lsam.stat.exists == True) or
         diff_resolv.stdout == "resolv_not_match" or
        (ansible_bond0 is defined and bond0_res.stdout == "bond0_not_match") or
        (ansible_bond1 is defined and bond1_res.stdout == "bond1_not_match") or
        (ansible_bond2 is defined and bond2_res.stdout == "bond2_not_match") or
        (ansible_system_vendor == 'HP' or ansible_system_vendor == 'HPE' and (adainf_stat is defined and adainf_stat.stdout == "adainf_not_match"))
    #    (adainf_stat is not defined and adainf_stat.stdout == "adainf_not_match")
       
#- fail:
#    msg: "ADAPTER INFO CHECKS ARE NOT MATCHING"
#  when: ansible_system_vendor == 'HP' or ansible_system_vendor == 'HPE' and (adainf_stat is defined and adainf_stat.stdout == "adainf_not_match")
        #serv_stat_oel6.stdout == "serv_not_match"
#- fail:
#    msg: "One of the post check failed. Please check the logs and fix"
#  when: df_stat.stdout == "df_not_match" or serv_stat.stdout == "serv_not_match"
        #(ansible_distribution_major_version == '7' and serv_stat.stdout == "serv_not_match") or
        #(diff_resolv.stdout == "resolv_not_match") or
        #(diff_sysctl.stdout == "sysctl_not_match") or
        #(lsam_stat.rc != 0 and file_lsam.stat.exists == True) 
        #(ansible_bond0 is defined and bond0_res.stdout == "bond0_not_match") or
        #(ansible_bond1 is defined and bond1_res.stdout == "bond1_not_match") or
        #(ansible_bond2 is defined and bond2_res.stdout == "bond2_not_match") or
        #(adainf_stat is defined and adainf_stat.stdout == "adainf_not_match")
